<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
    <style>
      
        .preview {
            max-width: 100%;
            height: auto;
        }
        .preview-container {
            display: flex;
            flex-wrap: wrap;
        }
        .preview-container img {
            margin-right: 10px;
            margin-bottom: 10px;
            max-width: 40%; /* Adjust as needed */
        }
        .cropper-container {
            width: 396px;
            height: 480px;
        }
    </style>
</head>
<body>
 
    <nav class="navbar navbar-expand-lg navbar-light " id="nav">
        <div class="container-fluid">
            <a class="navbar-brand" href="">
                <img src="/images/Screenshot_2024-07-14_091114-removebg-preview.png" alt="" style="margin-left: 20px;  width: 90px; height: auto;">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav mx-auto">
                    <a class="nav-item nav-link active" href="/admin/adminpage" style="padding-left: 70px;font-weight: 100; font-size: small;">DASHBOARD</a>
                    <a class="nav-item nav-link" href="/product/allproducts" style="padding-left: 78px;font-weight: 100;font-size: small;">PRODCUTS</a>
                    <a class="nav-item nav-link" href="#" style="padding-left: 78px;font-weight: 100;font-size: small;">ORDER LIST</a>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" style="padding-left: 78px;font-weight: 100;font-size: small;" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                          ADMIN
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                          <li><a class="dropdown-item" href="/admin/logoutadmin" style="padding-left: 28px;font-weight: 100;font-size: small;">LOGOUT</a></li>
                        </ul>
                      </li>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mt-3 ">
        <h4 style="color: #61474de8;">Edit Product</h4>
       <form id="" action="/product/edit-product/{{product._id}}" method="POST" enctype="multipart/form-data">

            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input type="text" class="form-control" id="name" name="name" value="{{product.name}}" required>
            </div>
            
            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea class="form-control" id="description" name="description">{{product.description}}</textarea>
            </div>
            <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <input type="number" class="form-control" id="price" name="price" value="{{product.price}}" required>
            </div>
            <div class="mb-3">
                <label for="popularity" class="form-label">popularity</label>
                <input type="number" class="form-control" id="popularity" name="popularity" value="{{product.popularity}}" required>
            </div>
             <div class="mb-3">
                <label for="images" class="form-label">color</label>
                <input class="form-control" type="text" id="color" name="color" value="{{product.color}}" required>
            </div>
             <div class="mb-3">
                <label for="images" class="form-label">style</label>
                <input class="form-control" type="text" id="style" name="style" value="{{product.style}}" required>
            </div>
            <div class="mb-3">
                <label for="images" class="form-label">fabric</label>
                <input class="form-control" type="text" id="fabric" name="fabric" value="{{product.fabric}}"required >
            </div>
            <div class="mb-3">
                <label for="size" class="form-label">size</label>
                <input class="form-control" type="text" id="size" name="size" value="{{product.size}}" required >
            </div>
            <div class="mb-3">
                <label for="size" class="form-label">care</label>
                <input class="form-control" type="text" id="care" name="care" value="{{product.care}}" required >
            </div>
            <div class="mb-3">
                <label for="size" class="form-label">Length</label>
                <input class="form-control" type="text" id="length" name="length" value="{{product.length}}" required >
            </div>
            <div class="mb-3">
                <label for="size" class="form-label">Stock quantity</label>
                <input class="form-control" type="text" id="stock" name="stock" value="{{product.stock}}" required >
            </div>
            <div class="mb-3">
                <label for="featured" class="form-label">Featured</label>
                <input class="form-control" type="boolean" id="featured" name="featured" value="{{product.featured}}" required >
            </div>
             <div class="mb-3">
                <label for="size" class="form-label">discount (%)</label>
                <input class="form-control" type="text" id="discountcoupen" name="discountcoupens" value="{{product.discountcoupens}}" required >
            </div>

          <div class="form-group">
        <label for="category">Category</label>
        <select id="category" name="category" class="form-control">
            {{#each categories}}
                <option value="{{this._id}}" {{#if ../product.category}} {{#if (eq ../product.category._id this._id)}} selected {{/if}} {{/if}}>{{this.name}}</option>
            {{/each}}
        </select>
    </div>
          <div class="mb-3">
                <label for="images" class="form-label">Current Images</label><br>
                {{#each product.images}}
                    <div class="image-container mb-2">
                        <img src="/product-images/{{this}}" style="width: 150px; cursor: pointer;" class="img-thumbnail current-image" data-image="{{this}}" alt="Product Image">
                        <button type="button" class="btn btn-warning btn-sm edit-image" data-image="{{this}}">Edit</button>
                        <input type="file" class="form-control mt-2 new-image-input" data-image="{{this}}">
                    </div>
                {{/each}}
                <label for="newImages" class="form-label">Upload New Images</label>
                <input class="form-control" type="file" id="newImages" name="images" multiple>
                <div id="imagepreview" class="mt-3"></div>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </form>
    </div>

    <div id="cropperModal" class="modal fade" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <img id="cropImage" src="" alt="Image to crop">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/cropperjs/dist/cropper.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    <script>
        let cropper;
        const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
        const cropImage = document.getElementById('cropImage');
        const cropButton = document.getElementById('cropButton');
        const imagePreview = document.getElementById('imagepreview');
        let currentImageSrc = '';
        let currentImageElement = null;
        let croppedImages = {}; // Store cropped images data

        // Handle cropping for new images
        document.getElementById('newImages').addEventListener('change', function(event) {
            const files = event.target.files;
            imagePreview.innerHTML = '';
            Array.from(files).forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.width = '100px';
                    img.style.cursor = 'pointer';
                    img.dataset.index = index;
                    img.addEventListener('click', function() {
                        cropImage.src = e.target.result;
                        currentImageSrc = e.target.result;
                        cropperModal.show();
                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(cropImage, {
                            aspectRatio: 1,
                            viewMode: 1
                        });
                    });
                    imagePreview.appendChild(img);
                }
                reader.readAsDataURL(file);
            });
        });

        // Handle cropping
        cropButton.addEventListener('click', function() {
            if (cropper) {
                cropper.getCroppedCanvas().toBlob(function(blob) {
                    const url = URL.createObjectURL(blob);
                    if (currentImageElement) {
                        currentImageElement.src = url;
                        croppedImages[currentImageElement.dataset.image] = blob; // Store the cropped image blob
                    } else {
                        const newImg = document.createElement('img');
                        newImg.src = url;
                        newImg.style.width = '100px';
                        imagePreview.innerHTML = '';
                        imagePreview.appendChild(newImg);
                    }
                    cropperModal.hide();
                });
            }
        });

        // Handle editing existing images
        document.querySelectorAll('.edit-image').forEach(button => {
            button.addEventListener('click', function() {
                const imageSrc = this.dataset.image;
                cropImage.src = `/product-images/${imageSrc}`;
                currentImageSrc = `/product-images/${imageSrc}`;
                currentImageElement = document.querySelector(`img[data-image="${imageSrc}"]`);
                cropperModal.show();
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(cropImage, {
                    aspectRatio: 1,
                    viewMode: 1
                });
            });
        });

        // Handle form submission
        document.getElementById('editProductForm').addEventListener('submit', function(event) {
            const formData = new FormData(this);
            for (const [key, value] of Object.entries(croppedImages)) {
                formData.append('croppedImages', value, key);
            }
            fetch(this.action, {
                method: 'POST',
                body: formData
            }).then(response => response.json()).then(data => {
                showPopup(data.message, data.success ? 'success' : 'error');
            }).catch(error => {
                showPopup('An error occurred. Please try again.', 'error');
            });
            event.preventDefault();
        });

        // Function to show popup messages
        function showPopup(message, type) {
            const popup = document.getElementById('popup');
            popup.innerHTML = message;
            popup.className = `popup ${type}`;
            popup.style.display = 'block';
            setTimeout(() => popup.style.display = 'none', 3000);
        }
    </script>
</body>
</html>